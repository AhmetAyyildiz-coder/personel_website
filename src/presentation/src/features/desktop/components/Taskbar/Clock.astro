---
import { Time } from "~/core/acore-ts/time/constants/Time";
import { Container } from "~/presentation/Container";

export type Props = {
  id?: string;
};

const i18n = Container.instance.i18n;
const locale = i18n.getLocaleFromUrl(Astro.url, "en");
---

<div class="flex select-none gap-2 text-nowrap text-white">
  <span id="clock">
    <span>00</span>:<span>00</span>
  </span>
  <span id="date" class="hidden sm:block"></span>
</div>

<script define:vars={{ Time, locale }}>
  function init() {
    const clockContainer = document.querySelector("#clock");
    const timeSections = clockContainer.querySelectorAll("span");
    const dateContainer = document.querySelector("#date");

    updateClock();
    updateDate();
    scheduleNextUpdate();

    function updateClock() {
      const now = new Date();
      const hours = now.getHours();
      const minutes = now.getMinutes();

      const [hourSection, minuteSection] = timeSections;
      hourSection.textContent = String(hours).padStart(2, "0");
      minuteSection.textContent = String(minutes).padStart(2, "0");
    }

    function updateDate() {
      const now = new Date();
      const options = { year: "numeric", month: "long", day: "2-digit", weekday: "long" };
      dateContainer.textContent = now.toLocaleString(locale, options);
    }

    function scheduleNextUpdate() {
      const timeRemainingToNextMinute = (Time.SecondsInMinute - new Date().getSeconds()) * Time.MillisInSecond;
      setTimeout(() => {
        updateClock();
        if (timeSections[0].textContent === "00") updateDate();

        setInterval(updateClock, Time.MillisInMinute);
      }, timeRemainingToNextMinute);
    }
  }

  init();
  document.addEventListener("astro:after-swap", init);
</script>
