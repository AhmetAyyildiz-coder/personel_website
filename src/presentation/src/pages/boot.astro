---
import { TranslationKeys } from "~/domain/data/Translations";
import { useI18nStatic } from "~/presentation/src/shared/utils/i18nTranslate";
import SplashLayout from "../shared/layouts/SplashLayout.astro";
import Icon from "../shared/components/Icon";
import Icons from "~/domain/data/Icons";

const translate = useI18nStatic(Astro.url);
---

<SplashLayout
  metaData={{
    title: translate(TranslationKeys.system_booting),
  }}
>
  <pre id="logs" class="mt-4 text-left"></pre>

  <span id="overlay" class="flex hidden size-full flex-col items-center justify-center">
    <Icon icon={Icons.spinner} isSpin class="mb-4 text-8xl" />
    <h1 class="mb-4 text-4xl font-bold">{translate(TranslationKeys.system_booting)}</h1>
    <pre id="log" class="mt-4 text-left text-green-500"></pre>
  </span>
</SplashLayout>

<script>
  import { navigate } from "astro:transitions/client";

  const logMessages = [
    "Starting target Basic System.",
    "Starting target Paths.",
    "Starting target Slices.",
    "Starting target Local File Systems.",
    "Reached target Initialization.",
    "Starting Network Manager.",
    "Starting D-Bus System Message Bus.",
    "Starting Permit User Sessions.",
    "Starting Authorization Manager.",
    "Starting Accounts Service.",
    "Starting Disk Manager.",
    "Starting User Login Management.",
    "Starting Virtual Machine and Container Registration Service.",
    "Starting System Logging Service.",
    "Starting Daily Cleanup of Temporary Directories.",
    "Loading user data...",
    "Opening database connections...",
    "Initializing session data...",
    "Starting background jobs...",
    "Logging in users...",
    "Finalizing boot procedures...",
  ];

  const overlayElement = document.getElementById("overlay")!;
  const logElement = document.getElementById("logs")!;

  const spanElement = document.createElement("span");
  spanElement.className = "text-green-500";
  spanElement.innerText = "OK";

  let logIndex = 0;
  const logsInterval = setInterval(() => {
    if (logIndex < logMessages.length) {
      logElement.innerHTML += "[ ";
      logElement.appendChild(spanElement);
      logElement.innerHTML += " ] " + logMessages[logIndex] + "\n";
      ++logIndex;
    } else {
      clearInterval(logsInterval);
      logElement.classList.add("hidden");
      overlayElement.classList.remove("hidden");
      setTimeout(() => navigate("/"), 1000);
    }
  }, 50);
</script>
