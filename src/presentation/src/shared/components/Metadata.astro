---
import { SEO } from "astro-seo";

export type Robots = {
  index?: boolean;
  follow?: boolean;
};

export type OpenGraphBasic = {
  title: string;
  type: string;
  image: string;
  url?: string | URL;
};

export type OpenGraphOptional = {
  audio?: string;
  description?: string;
  determiner?: string;
  locale?: string;
  localeAlternate?: string[];
  siteName?: string;
  video?: string;
};

export type OpenGraphImage = {
  alt?: string;
  width?: number;
  height?: number;
  type?: string;
};

export type OpenGraph = {
  basic: OpenGraphBasic;
  optional?: OpenGraphOptional;
  image?: OpenGraphImage;
};

export type Twitter = {
  card?: "summary" | "summary_large_image" | "app" | "player";
  creator?: string;
  site?: string;
  title?: string;
  description?: string;
  image?: string;
  imageAlt?: string;
};

export type Extend = {
  link?: { rel: string; href: string }[];
  meta?: { name: string; content: string }[];
};

export type Props = {
  title?: string;
  ignoreTitleTemplate?: boolean;
  canonical?: string;
  robots?: Robots;
  description?: string;
  noindex?: boolean;
  nofollow?: boolean;
  openGraph?: OpenGraph;
  twitter?: Twitter;
  extend?: Extend;
};

const { title, description, canonical, noindex = false, nofollow = false, openGraph, twitter, extend } = Astro.props;
---

<SEO
  title={title}
  description={description}
  canonical={canonical}
  noindex={noindex}
  nofollow={nofollow}
  openGraph={openGraph}
  twitter={{
    card: "summary_large_image",
    ...twitter,
  }}
  extend={{
    meta: [{ name: "viewport", content: "width=device-width, initial-scale=1" }, ...(extend?.meta || [])],
    link: [...(extend?.link || [])],
  }}
/>
